// Vitest Snapshot v1

exports[`Dynamic > Enum types > Default > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* enum */ number
interface Props {
  foo: _VTI_TYPE_Foo
}
import { Foo } from './_types'
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Enum types > Default > local.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Foo = /* enum */ number
interface Props {
  foo: _VTI_TYPE_Foo
}
// Weird output when using eslint, disable it temporarily
/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
enum Foo {
  Bar,
  Baz,
  Qux,
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Import priority > Preferred dts > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface _VTI_TYPE_Foo {
  fromDTS: boolean
}
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Import priority > Preferred ts > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface _VTI_TYPE_Foo {
  fromTS: boolean
}
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Import priority > Preferred tsx > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface _VTI_TYPE_Foo {
  fromTSX: boolean
}
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > 1.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type Baz = boolean
type Bar = number
type Foo = string
interface Props {
  baz: Baz
  foo: Foo
  bar: Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > 2.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type Baz = boolean
interface BaseProps {
  baz: Baz
}
type Bar = number
type Foo = string
interface Props {
  baz: Baz
  foo: Foo
  bar: Bar
  base: BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > 3.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type Qux = 'qux'
type Baz = boolean
interface BaseProps {
  qux: Qux
  baz: Baz
}
type Bar = number
type Foo = string
interface Props {
  qux: Qux
  baz: Baz
  foo: Foo
  bar: Bar
  base: BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > external_1.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Baz = boolean
type Bar = number
type Foo = string
interface Props {
  baz: _VTI_TYPE_Baz
  foo: Foo
  bar: Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > external_2.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Baz = boolean
interface _VTI_TYPE_BaseProps {
  baz: _VTI_TYPE_Baz
}
type Bar = number
type Foo = string
interface Props {
  baz: _VTI_TYPE_Baz
  foo: Foo
  bar: Bar
  base: _VTI_TYPE_BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > Has reference > external_3.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type _VTI_TYPE_Qux = 'qux'
type _VTI_TYPE_Baz = boolean
interface _VTI_TYPE_BaseProps {
  qux: _VTI_TYPE_Qux
  baz: _VTI_TYPE_Baz
}
type Bar = number
type Foo = string
interface Props {
  qux: _VTI_TYPE_Qux
  baz: _VTI_TYPE_Baz
  foo: Foo
  bar: Bar
  base: _VTI_TYPE_BaseProps
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > No reference > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  baz: boolean
  foo: string
  bar: number
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface extends interface > No reference > internal.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  baz: boolean
  foo: string
  bar: number
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Interface without reference > No transform > index.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
interface Props {
  foo: string
  bar: number
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Multi level reference > Default > 1.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type Foo = number
type Bar = Foo
interface Props {
  foo: Foo
  bar: Bar
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Multi level reference > Default > 2.vue (default) 1`] = `
"<script lang=\\"ts\\" setup>
type Foo = number
type Bar = Foo
type Qux = Foo
type Baz = Bar
interface Props {
  foo: Foo
  bar: Bar
  baz: Baz
  qux: Qux
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Tsx > Import tsx > index.vue (default) 1`] = `
"<script lang=\\"tsx\\" setup>
interface _VTI_TYPE_Foo {
  fromTSX: boolean
}
interface Props {
  foo: _VTI_TYPE_Foo
}
defineProps<Props>()
</script>
"
`;

exports[`Dynamic > Tsx > Lang tsx > index.vue (default) 1`] = `
"<script lang=\\"tsx\\" setup>
interface Props {
  foo: string
}
defineProps<Props>()
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const render = () => <div />
</script>
"
`;
